{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #include<stdio.h>
\f1 \

\f0 #include<stdlib.h>
\f1 \

\f0 #include<unistd.h>
\f1 \

\f0 #define BUCKET_CAPACITY 10
\f1 \

\f0 #define OUTPUT_RATE 5
\f1 \

\f0 int main()
\f1 \

\f0 \{
\f1 \

\f0 int incoming_data=0;
\f1 \

\f0 int bucket_level=0;
\f1 \

\f0 printf("Leaky Bucket Algorithm Simulation\\n");
\f1 \

\f0 while(1)\{
\f1 \

\f0 incoming_data=rand()%9+1;
\f1 \

\f0 printf("Incoming Data:%d\\n",incoming_data);
\f1 \

\f0 if((bucket_level+incoming_data)<=BUCKET_CAPACITY)\{
\f1 \

\f0 bucket_level+=incoming_data;
\f1 \

\f0 printf("Bucket_Level:%d\\n",bucket_level);
\f1 \

\f0 \}
\f1 \

\f0 else
\f1 \

\f0 \{
\f1 \

\f0 printf("Bucket Overflow!Dropping Data:%d\\n",incoming_data);
\f1 \

\f0 \}
\f1 \

\f0 if (bucket_level>=OUTPUT_RATE)\{
\f1 \

\f0 bucket_level -=OUTPUT_RATE;
\f1 \

\f0 printf("Data Sent : %d\\n",OUTPUT_RATE);
\f1 \

\f0 printf("BUCKET level : %d\\n",bucket_level);
\f1 \

\f0 \}
\f1 \

\f0 else\{
\f1 \

\f0 printf("Data sent=%d\\n",bucket_level);
\f1 \

\f0 bucket_level=0;
\f1 \

\f0 printf("Bucket Level :%d\\n",bucket_level);
\f1 \

\f0 \}
\f1 \

\f0 printf("------------------------\\n");
\f1 \

\f0 sleep(1);
\f1 \

\f0 \}
\f1 \

\f0 return 0;
\f1 \

\f0 \}
\f1 \
\
}